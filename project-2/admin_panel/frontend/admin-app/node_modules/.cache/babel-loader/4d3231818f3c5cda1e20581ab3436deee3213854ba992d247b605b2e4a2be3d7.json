{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nconst API_BASE_URL = process.env.VUE_APP_ADMIN_API_URL || 'http://20.121.46.47:7777/api';\nasync function login(username, password) {\n  const response = await fetch(`${API_BASE_URL}/auth/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  });\n  const data = await response.json();\n  if (!response.ok) {\n    throw new Error(data.message || `HTTP error! status: ${response.status}`);\n  }\n  if (!data.success) {\n    throw new Error(data.message || 'Login failed. Please check your credentials.');\n  }\n  return data; // Expects { success: true, user: { username: '...' } }\n}\nasync function getMessages(filters = {}, page = 1, limit = 10) {\n  const queryParams = new URLSearchParams({\n    page: page.toString(),\n    limit: limit.toString(),\n    ...filters\n  });\n  Object.keys(filters).forEach(key => queryParams.get(key) === 'undefined' && queryParams.delete(key)); // Clean up undefined string\n\n  const response = await fetch(`${API_BASE_URL}/messages?${queryParams.toString()}`);\n  if (!response.ok) {\n    const errorData = await response.json().catch(() => ({\n      message: `HTTP error! status: ${response.status}`\n    }));\n    throw new Error(errorData.message);\n  }\n  return response.json(); // Expects { data: messages, page, limit, totalPages, totalMessages }\n}\nasync function deleteMessage(messageId) {\n  const response = await fetch(`${API_BASE_URL}/messages/${messageId}`, {\n    method: 'DELETE'\n  });\n  if (!response.ok) {\n    const errorData = await response.json().catch(() => ({\n      message: `HTTP error! status: ${response.status}`\n    }));\n    throw new Error(errorData.message);\n  }\n  return response.json(); // Expects { message: 'Message deleted successfully' } or error\n}\nasync function getRooms(page = 1, limit = 10) {\n  const queryParams = new URLSearchParams({\n    page: page.toString(),\n    limit: limit.toString()\n  });\n  const response = await fetch(`${API_BASE_URL}/rooms?${queryParams.toString()}`);\n  if (!response.ok) {\n    const errorData = await response.json().catch(() => ({\n      message: `HTTP error! status: ${response.status}`\n    }));\n    throw new Error(errorData.message);\n  }\n  return response.json(); // Expects { data: rooms, page, limit, totalPages, totalRooms }\n}\nasync function deleteRoom(roomId) {\n  const response = await fetch(`${API_BASE_URL}/rooms/${roomId}`, {\n    method: 'DELETE'\n  });\n  if (!response.ok) {\n    const errorData = await response.json().catch(() => ({\n      message: `HTTP error! status: ${response.status}`\n    }));\n    throw new Error(errorData.message);\n  }\n  return response.json(); // Expects { message: 'Room and associated messages deleted successfully' } or error\n}\n\n// --- NEW STATS FUNCTION ---\nasync function getStatsOverview() {\n  const response = await fetch(`${API_BASE_URL}/stats/overview`);\n  if (!response.ok) {\n    const errorData = await response.json().catch(() => ({\n      message: `HTTP error! status: ${response.status}`\n    }));\n    throw new Error(errorData.message);\n  }\n  return response.json(); // Expects { success: true, currentOnlineTotal, onlineByRoom, historicalMaxFromDB }\n}\n// --- END NEW STATS FUNCTION ---\n\nexport default {\n  login,\n  getMessages,\n  deleteMessage,\n  getRooms,\n  deleteRoom,\n  getStatsOverview\n};","map":{"version":3,"names":["API_BASE_URL","process","env","VUE_APP_ADMIN_API_URL","login","username","password","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","message","status","success","getMessages","filters","page","limit","queryParams","URLSearchParams","toString","Object","keys","forEach","key","get","delete","errorData","catch","deleteMessage","messageId","getRooms","deleteRoom","roomId","getStatsOverview"],"sources":["/home/jh9108/project-2/admin_panel/frontend/admin-app/src/services/apiService.js"],"sourcesContent":["const API_BASE_URL = process.env.VUE_APP_ADMIN_API_URL || 'http://20.121.46.47:7777/api';\n\nasync function login(username, password) {\n  const response = await fetch(`${API_BASE_URL}/auth/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ username, password }),\n  });\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || `HTTP error! status: ${response.status}`);\n  }\n\n  if (!data.success) {\n    throw new Error(data.message || 'Login failed. Please check your credentials.');\n  }\n  return data; // Expects { success: true, user: { username: '...' } }\n}\n\nasync function getMessages(filters = {}, page = 1, limit = 10) {\n  const queryParams = new URLSearchParams({\n    page: page.toString(),\n    limit: limit.toString(),\n    ...filters\n  });\n  Object.keys(filters).forEach(key => queryParams.get(key) === 'undefined' && queryParams.delete(key)); // Clean up undefined string\n\n  const response = await fetch(`${API_BASE_URL}/messages?${queryParams.toString()}`);\n  if (!response.ok) {\n    const errorData = await response.json().catch(() => ({ message: `HTTP error! status: ${response.status}` }));\n    throw new Error(errorData.message);\n  }\n  return response.json(); // Expects { data: messages, page, limit, totalPages, totalMessages }\n}\n\nasync function deleteMessage(messageId) {\n  const response = await fetch(`${API_BASE_URL}/messages/${messageId}`, {\n    method: 'DELETE',\n  });\n  if (!response.ok) {\n    const errorData = await response.json().catch(() => ({ message: `HTTP error! status: ${response.status}` }));\n    throw new Error(errorData.message);\n  }\n  return response.json(); // Expects { message: 'Message deleted successfully' } or error\n}\n\nasync function getRooms(page = 1, limit = 10) {\n  const queryParams = new URLSearchParams({\n    page: page.toString(),\n    limit: limit.toString(),\n  });\n  const response = await fetch(`${API_BASE_URL}/rooms?${queryParams.toString()}`);\n  if (!response.ok) {\n    const errorData = await response.json().catch(() => ({ message: `HTTP error! status: ${response.status}` }));\n    throw new Error(errorData.message);\n  }\n  return response.json(); // Expects { data: rooms, page, limit, totalPages, totalRooms }\n}\n\nasync function deleteRoom(roomId) {\n  const response = await fetch(`${API_BASE_URL}/rooms/${roomId}`, {\n    method: 'DELETE',\n  });\n  if (!response.ok) {\n    const errorData = await response.json().catch(() => ({ message: `HTTP error! status: ${response.status}` }));\n    throw new Error(errorData.message);\n  }\n  return response.json(); // Expects { message: 'Room and associated messages deleted successfully' } or error\n}\n\n// --- NEW STATS FUNCTION ---\nasync function getStatsOverview() {\n  const response = await fetch(`${API_BASE_URL}/stats/overview`);\n  if (!response.ok) {\n    const errorData = await response.json().catch(() => ({ message: `HTTP error! status: ${response.status}` }));\n    throw new Error(errorData.message);\n  }\n  return response.json(); // Expects { success: true, currentOnlineTotal, onlineByRoom, historicalMaxFromDB }\n}\n// --- END NEW STATS FUNCTION ---\n\nexport default {\n  login,\n  getMessages,\n  deleteMessage,\n  getRooms,\n  deleteRoom,\n  getStatsOverview\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"dashboard-container\"\n};\nconst _hoisted_2 = {\n  class: \"stats-section data-section\"\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"error\"\n};\nconst _hoisted_5 = {\n  key: 2,\n  class: \"stats-overview\"\n};\nconst _hoisted_6 = {\n  key: 0\n};\nconst _hoisted_7 = {\n  key: 1\n};\nconst _hoisted_8 = {\n  class: \"data-section\"\n};\nconst _hoisted_9 = {\n  class: \"filters\"\n};\nconst _hoisted_10 = {\n  key: 0\n};\nconst _hoisted_11 = {\n  key: 1,\n  class: \"error\"\n};\nconst _hoisted_12 = {\n  key: 2\n};\nconst _hoisted_13 = [\"onClick\"];\nconst _hoisted_14 = {\n  key: 3\n};\nconst _hoisted_15 = {\n  key: 4,\n  class: \"pagination\"\n};\nconst _hoisted_16 = [\"disabled\"];\nconst _hoisted_17 = [\"disabled\"];\nconst _hoisted_18 = {\n  class: \"data-section\"\n};\nconst _hoisted_19 = {\n  key: 0\n};\nconst _hoisted_20 = {\n  key: 1,\n  class: \"error\"\n};\nconst _hoisted_21 = {\n  key: 2\n};\nconst _hoisted_22 = [\"onClick\"];\nconst _hoisted_23 = {\n  key: 3\n};\nconst _hoisted_24 = {\n  key: 4,\n  class: \"pagination\"\n};\nconst _hoisted_25 = [\"disabled\"];\nconst _hoisted_26 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[15] || (_cache[15] = _createElementVNode(\"h1\", null, \"Admin Dashboard\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: $setup.handleLogout,\n    class: \"logout-button\"\n  }, \"Logout\"), _createCommentVNode(\" Stats Section \"), _createElementVNode(\"section\", _hoisted_2, [_cache[10] || (_cache[10] = _createElementVNode(\"h2\", null, \"System Stats\", -1 /* HOISTED */)), $setup.loadingStats ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \"Loading stats...\")) : _createCommentVNode(\"v-if\", true), $setup.errorStats ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _toDisplayString($setup.errorStats), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $setup.statsOverview ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"p\", null, [_cache[7] || (_cache[7] = _createElementVNode(\"strong\", null, \"Current Online Users (Total):\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.statsOverview.currentOnlineTotal), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[8] || (_cache[8] = _createElementVNode(\"strong\", null, \"Historical Max Online Users (DB):\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.statsOverview.historicalMaxFromDB), 1 /* TEXT */)]), _cache[9] || (_cache[9] = _createElementVNode(\"h3\", null, \"Online Users by Room:\", -1 /* HOISTED */)), Object.keys($setup.statsOverview.onlineByRoom || {}).length > 0 ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.statsOverview.onlineByRoom, (users, roomName) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: roomName\n    }, [_createElementVNode(\"strong\", null, _toDisplayString(roomName) + \" (\" + _toDisplayString(users.length) + \"):\", 1 /* TEXT */), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(users, user => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: user.nodeId || user.nickname\n      }, _toDisplayString(user.nickname), 1 /* TEXT */);\n    }), 128 /* KEYED_FRAGMENT */))])]);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_7, \"No users currently online in any room.\"))])) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" Messages Section \"), _createElementVNode(\"section\", _hoisted_8, [_cache[12] || (_cache[12] = _createElementVNode(\"h2\", null, \"Messages\", -1 /* HOISTED */)), _createCommentVNode(\" Message Filters (Optional) \"), _createElementVNode(\"div\", _hoisted_9, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.messageFilters.room_name = $event),\n    placeholder: \"Filter by Room Name\",\n    onKeyup: _withKeys($setup.applyMessageFilters, [\"enter\"])\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $setup.messageFilters.room_name]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.messageFilters.sender_nickname = $event),\n    placeholder: \"Filter by Sender\",\n    onKeyup: _withKeys($setup.applyMessageFilters, [\"enter\"])\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $setup.messageFilters.sender_nickname]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.messageFilters.message_content = $event),\n    placeholder: \"Filter by Content\",\n    onKeyup: _withKeys($setup.applyMessageFilters, [\"enter\"])\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $setup.messageFilters.message_content]]), _createElementVNode(\"button\", {\n    onClick: $setup.applyMessageFilters\n  }, \"Filter Messages\"), _createElementVNode(\"button\", {\n    onClick: $setup.resetMessageFilters\n  }, \"Reset Filters\")]), $setup.loadingMessages ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, \"Loading messages...\")) : _createCommentVNode(\"v-if\", true), $setup.errorMessages ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, _toDisplayString($setup.errorMessages), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $setup.messages.length > 0 ? (_openBlock(), _createElementBlock(\"table\", _hoisted_12, [_cache[11] || (_cache[11] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"ID\"), _createElementVNode(\"th\", null, \"Room\"), _createElementVNode(\"th\", null, \"Sender\"), _createElementVNode(\"th\", null, \"Content\"), _createElementVNode(\"th\", null, \"Timestamp\"), _createElementVNode(\"th\", null, \"Actions\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.messages, message => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: message.message_id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(typeof message.message_id === 'string' ? message.message_id.substring(0, 8) : 'N/A') + \"... \", 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(message.room_name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(message.sender_nickname), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(message.message_content), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(new Date(message.timestamp).toLocaleString()), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $setup.handleDeleteMessage(message.message_id),\n      class: \"delete-button\"\n    }, \" Delete \", 8 /* PROPS */, _hoisted_13)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : !$setup.loadingMessages && $setup.messages.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, \"No messages found.\")) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Message Pagination \"), $setup.messages.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [_createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = $event => $setup.fetchMessages($setup.messagePage - 1, $setup.currentMessageFilters)),\n    disabled: $setup.messagePage <= 1\n  }, \" Previous \", 8 /* PROPS */, _hoisted_16), _createElementVNode(\"span\", null, \"Page \" + _toDisplayString($setup.messagePage) + \" of \" + _toDisplayString($setup.messageTotalPages), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = $event => $setup.fetchMessages($setup.messagePage + 1, $setup.currentMessageFilters)),\n    disabled: $setup.messagePage >= $setup.messageTotalPages\n  }, \" Next \", 8 /* PROPS */, _hoisted_17)])) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" Rooms Section \"), _createElementVNode(\"section\", _hoisted_18, [_cache[14] || (_cache[14] = _createElementVNode(\"h2\", null, \"Rooms\", -1 /* HOISTED */)), $setup.loadingRooms ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, \"Loading rooms...\")) : _createCommentVNode(\"v-if\", true), $setup.errorRooms ? (_openBlock(), _createElementBlock(\"div\", _hoisted_20, _toDisplayString($setup.errorRooms), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $setup.rooms.length > 0 ? (_openBlock(), _createElementBlock(\"table\", _hoisted_21, [_cache[13] || (_cache[13] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"ID\"), _createElementVNode(\"th\", null, \"Name\"), _createElementVNode(\"th\", null, \"Creator ID\"), _createElementVNode(\"th\", null, \"Created At\"), _createElementVNode(\"th\", null, \"Actions\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.rooms, room => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: room.room_id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(typeof room.room_id === 'string' ? room.room_id.substring(0, 8) : 'N/A') + \"... \", 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(room.room_name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(room.creator_node_id && typeof room.creator_node_id === 'string' ? room.creator_node_id.substring(0, 8) : 'N/A') + \"... \", 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(new Date(room.created_at).toLocaleString()), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $setup.handleDeleteRoom(room.room_id),\n      class: \"delete-button\"\n    }, \"Delete\", 8 /* PROPS */, _hoisted_22)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : !$setup.loadingRooms && $setup.rooms.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_23, \"No rooms found.\")) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Room Pagination \"), $setup.rooms.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_24, [_createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = $event => $setup.fetchRooms($setup.roomPage - 1)),\n    disabled: $setup.roomPage <= 1\n  }, \"Previous\", 8 /* PROPS */, _hoisted_25), _createElementVNode(\"span\", null, \"Page \" + _toDisplayString($setup.roomPage) + \" of \" + _toDisplayString($setup.roomTotalPages), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[6] || (_cache[6] = $event => $setup.fetchRooms($setup.roomPage + 1)),\n    disabled: $setup.roomPage >= $setup.roomTotalPages\n  }, \" Next \", 8 /* PROPS */, _hoisted_26)])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","onClick","$setup","handleLogout","_createCommentVNode","_hoisted_2","loadingStats","_hoisted_3","errorStats","_hoisted_4","_toDisplayString","statsOverview","_hoisted_5","_createTextVNode","currentOnlineTotal","historicalMaxFromDB","Object","keys","onlineByRoom","length","_hoisted_6","_Fragment","_renderList","users","roomName","user","nodeId","nickname","_hoisted_7","_hoisted_8","_hoisted_9","type","_cache","$event","messageFilters","room_name","placeholder","onKeyup","_withKeys","applyMessageFilters","sender_nickname","message_content","resetMessageFilters","loadingMessages","_hoisted_10","errorMessages","_hoisted_11","messages","_hoisted_12","message","message_id","substring","Date","timestamp","toLocaleString","handleDeleteMessage","_hoisted_13","_hoisted_14","_hoisted_15","fetchMessages","messagePage","currentMessageFilters","disabled","_hoisted_16","messageTotalPages","_hoisted_17","_hoisted_18","loadingRooms","_hoisted_19","errorRooms","_hoisted_20","rooms","_hoisted_21","room","room_id","creator_node_id","created_at","handleDeleteRoom","_hoisted_22","_hoisted_23","_hoisted_24","fetchRooms","roomPage","_hoisted_25","roomTotalPages","_hoisted_26"],"sources":["/home/jh9108/project-2/admin_panel/frontend/admin-app/src/views/DashboardView.vue"],"sourcesContent":["<template>\n  <div class=\"dashboard-container\">\n    <h1>Admin Dashboard</h1>\n    <button @click=\"handleLogout\" class=\"logout-button\">Logout</button>\n\n    <!-- Stats Section -->\n    <section class=\"stats-section data-section\">\n        <h2>System Stats</h2>\n        <div v-if=\"loadingStats\">Loading stats...</div>\n        <div v-if=\"errorStats\" class=\"error\">{{ errorStats }}</div>\n        <div v-if=\"statsOverview\" class=\"stats-overview\">\n            <p><strong>Current Online Users (Total):</strong> {{ statsOverview.currentOnlineTotal }}</p>\n            <p><strong>Historical Max Online Users (DB):</strong> {{ statsOverview.historicalMaxFromDB }}</p>\n            <h3>Online Users by Room:</h3>\n            <ul v-if=\"Object.keys(statsOverview.onlineByRoom || {}).length > 0\">\n                <li v-for=\"(users, roomName) in statsOverview.onlineByRoom\" :key=\"roomName\">\n                    <strong>{{ roomName }} ({{ users.length }}):</strong>\n                    <ul>\n                        <li v-for=\"user in users\" :key=\"user.nodeId || user.nickname\">{{ user.nickname }}</li>\n                    </ul>\n                </li>\n            </ul>\n            <p v-else>No users currently online in any room.</p>\n        </div>\n    </section>\n\n    <!-- Messages Section -->\n    <section class=\"data-section\">\n      <h2>Messages</h2>\n      <!-- Message Filters (Optional) -->\n      <div class=\"filters\">\n        <input\n          type=\"text\"\n          v-model=\"messageFilters.room_name\"\n          placeholder=\"Filter by Room Name\"\n          @keyup.enter=\"applyMessageFilters\"\n        />\n        <input\n          type=\"text\"\n          v-model=\"messageFilters.sender_nickname\"\n          placeholder=\"Filter by Sender\"\n          @keyup.enter=\"applyMessageFilters\"\n        />\n        <input\n          type=\"text\"\n          v-model=\"messageFilters.message_content\"\n          placeholder=\"Filter by Content\"\n          @keyup.enter=\"applyMessageFilters\"\n        />\n        <button @click=\"applyMessageFilters\">Filter Messages</button>\n        <button @click=\"resetMessageFilters\">Reset Filters</button>\n      </div>\n\n      <div v-if=\"loadingMessages\">Loading messages...</div>\n      <div v-if=\"errorMessages\" class=\"error\">{{ errorMessages }}</div>\n      <table v-if=\"messages.length > 0\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Room</th>\n            <th>Sender</th>\n            <th>Content</th>\n            <th>Timestamp</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"message in messages\" :key=\"message.message_id\">\n            <td>\n              {{\n                typeof message.message_id === 'string' ? message.message_id.substring(0, 8) : 'N/A'\n              }}...\n            </td>\n            <td>{{ message.room_name }}</td>\n            <td>{{ message.sender_nickname }}</td>\n            <td>{{ message.message_content }}</td>\n            <td>{{ new Date(message.timestamp).toLocaleString() }}</td>\n            <td>\n              <button @click=\"handleDeleteMessage(message.message_id)\" class=\"delete-button\">\n                Delete\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <div v-else-if=\"!loadingMessages && messages.length === 0\">No messages found.</div>\n      <!-- Message Pagination -->\n      <div class=\"pagination\" v-if=\"messages.length > 0\">\n        <button\n          @click=\"fetchMessages(messagePage - 1, currentMessageFilters)\"\n          :disabled=\"messagePage <= 1\"\n        >\n          Previous\n        </button>\n        <span>Page {{ messagePage }} of {{ messageTotalPages }}</span>\n        <button\n          @click=\"fetchMessages(messagePage + 1, currentMessageFilters)\"\n          :disabled=\"messagePage >= messageTotalPages\"\n        >\n          Next\n        </button>\n      </div>\n    </section>\n\n    <!-- Rooms Section -->\n    <section class=\"data-section\">\n      <h2>Rooms</h2>\n      <div v-if=\"loadingRooms\">Loading rooms...</div>\n      <div v-if=\"errorRooms\" class=\"error\">{{ errorRooms }}</div>\n      <table v-if=\"rooms.length > 0\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Name</th>\n            <th>Creator ID</th>\n            <th>Created At</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"room in rooms\" :key=\"room.room_id\">\n            <td>\n              {{ typeof room.room_id === 'string' ? room.room_id.substring(0, 8) : 'N/A' }}...\n            </td>\n            <td>{{ room.room_name }}</td>\n            <td>\n              {{\n                room.creator_node_id && typeof room.creator_node_id === 'string'\n                  ? room.creator_node_id.substring(0, 8)\n                  : 'N/A'\n              }}...\n            </td>\n            <td>{{ new Date(room.created_at).toLocaleString() }}</td>\n            <td>\n              <button @click=\"handleDeleteRoom(room.room_id)\" class=\"delete-button\">Delete</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <div v-else-if=\"!loadingRooms && rooms.length === 0\">No rooms found.</div>\n      <!-- Room Pagination -->\n      <div class=\"pagination\" v-if=\"rooms.length > 0\">\n        <button @click=\"fetchRooms(roomPage - 1)\" :disabled=\"roomPage <= 1\">Previous</button>\n        <span>Page {{ roomPage }} of {{ roomTotalPages }}</span>\n        <button @click=\"fetchRooms(roomPage + 1)\" :disabled=\"roomPage >= roomTotalPages\">\n          Next\n        </button>\n      </div>\n    </section>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport apiService from '../services/apiService';\n\nconst router = useRouter();\n\n// Logout\nconst handleLogout = () => {\n  localStorage.removeItem('isAdminLoggedIn');\n  localStorage.removeItem('adminUser');\n  router.push('/login');\n};\n\n// Messages state and functions\nconst messages = ref([]);\nconst messagePage = ref(1);\nconst messageTotalPages = ref(1);\nconst messageLimit = ref(10); // Can be configurable\nconst loadingMessages = ref(false);\nconst errorMessages = ref(null);\nconst messageFilters = reactive({\n  room_name: '',\n  sender_nickname: '',\n  message_content: '',\n});\nconst currentMessageFilters = reactive({ ...messageFilters }); // To store applied filters for pagination\n\nconst fetchMessages = async (page = 1, filters = {}) => {\n  loadingMessages.value = true;\n  errorMessages.value = null;\n  try {\n    const effectiveFilters = { ...filters }; // Create a mutable copy\n    Object.keys(effectiveFilters).forEach((key) => {\n      // Remove empty filters\n      if (\n        effectiveFilters[key] === '' ||\n        effectiveFilters[key] === null ||\n        effectiveFilters[key] === undefined\n      ) {\n        delete effectiveFilters[key];\n      }\n    });\n\n    const response = await apiService.getMessages(effectiveFilters, page, messageLimit.value);\n    messages.value = response.data;\n    messagePage.value = response.page;\n    messageTotalPages.value = response.totalPages;\n  } catch (err) {\n    errorMessages.value = err.message || 'Failed to load messages.';\n  }\n  loadingMessages.value = false;\n};\n\nconst applyMessageFilters = () => {\n  Object.assign(currentMessageFilters, messageFilters); // Update current filters\n  fetchMessages(1, currentMessageFilters); // Fetch from page 1 with new filters\n};\n\nconst resetMessageFilters = () => {\n  messageFilters.room_name = '';\n  messageFilters.sender_nickname = '';\n  messageFilters.message_content = '';\n  Object.assign(currentMessageFilters, messageFilters); // Reset current filters\n  fetchMessages(1, currentMessageFilters);\n};\n\nconst handleDeleteMessage = async (messageId) => {\n  console.log('Attempting to delete message with ID:', messageId, 'Type:', typeof messageId); // DEBUG LINE\n  if (confirm('Are you sure you want to delete this message?')) {\n    try {\n      await apiService.deleteMessage(messageId);\n      fetchMessages(messagePage.value, currentMessageFilters);\n    } catch (err) {\n      alert(err.message || 'Failed to delete message.');\n    }\n  }\n};\n\n// Rooms state and functions\nconst rooms = ref([]);\nconst roomPage = ref(1);\nconst roomTotalPages = ref(1);\nconst roomLimit = ref(10); // Can be configurable\nconst loadingRooms = ref(false);\nconst errorRooms = ref(null);\n\nconst fetchRooms = async (page = 1) => {\n  loadingRooms.value = true;\n  errorRooms.value = null;\n  try {\n    const response = await apiService.getRooms(page, roomLimit.value);\n    rooms.value = response.data;\n    roomPage.value = response.page;\n    roomTotalPages.value = response.totalPages;\n  } catch (err) {\n    errorRooms.value = err.message || 'Failed to load rooms.';\n  }\n  loadingRooms.value = false;\n};\n\nconst handleDeleteRoom = async (roomId) => {\n  if (confirm('Are you sure you want to delete this room and all its messages?')) {\n    try {\n      await apiService.deleteRoom(roomId);\n      fetchRooms(roomPage.value); // Refresh current page\n      fetchMessages(1, {}); // Also refresh messages as rooms might have changed\n    } catch (err) {\n      alert(err.message || 'Failed to delete room.');\n    }\n  }\n};\n\n// --- NEW STATS STATE AND FUNCTIONS ---\nconst statsOverview = ref(null);\nconst loadingStats = ref(false);\nconst errorStats = ref(null);\n\nconst fetchStatsOverview = async () => {\n    loadingStats.value = true;\n    errorStats.value = null;\n    try {\n        const response = await apiService.getStatsOverview();\n        if (response.success) {\n            statsOverview.value = response;\n        } else {\n            throw new Error(response.message || 'Failed to fetch stats overview.');\n        }\n    } catch (err) {\n        errorStats.value = err.message || 'Could not load system stats.';\n        statsOverview.value = { currentOnlineTotal: 'Error', historicalMaxFromDB: 'Error', onlineByRoom: {} }; // Provide fallback for display\n    }\n    loadingStats.value = false;\n};\n// --- END NEW STATS STATE AND FUNCTIONS ---\n\n// Load initial data\nonMounted(() => {\n  fetchMessages(1, currentMessageFilters);\n  fetchRooms();\n  fetchStatsOverview(); // <-- Fetch stats on mount\n});\n</script>\n\n<style scoped>\n.dashboard-container {\n  padding: 20px;\n  font-family: sans-serif;\n}\n.logout-button {\n  float: right;\n  padding: 8px 15px;\n  background-color: #f44336;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n.logout-button:hover {\n  background-color: #d32f2f;\n}\n.data-section {\n  margin-top: 30px;\n  padding: 15px;\n  border: 1px solid #eee;\n  border-radius: 5px;\n}\n.data-section h2 {\n  margin-top: 0;\n}\n.filters {\n  margin-bottom: 15px;\n  display: flex;\n  gap: 10px;\n  align-items: center;\n}\n.filters input {\n  padding: 8px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\n.filters button {\n  padding: 8px 12px;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n.filters button:hover {\n  background-color: #0056b3;\n}\n\ntable {\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 15px;\n}\nthead {\n  background-color: #f8f9fa;\n}\nth,\ntd {\n  border: 1px solid #ddd;\n  padding: 8px;\n  text-align: left;\n  font-size: 0.9em;\n}\ntd button.delete-button {\n  padding: 5px 10px;\n  background-color: #dc3545;\n  color: white;\n  border: none;\n  border-radius: 3px;\n  cursor: pointer;\n}\ntd button.delete-button:hover {\n  background-color: #c82333;\n}\n.pagination {\n  margin-top: 15px;\n  text-align: center;\n}\n.pagination button {\n  padding: 6px 10px;\n  margin: 0 5px;\n  background-color: #6c757d;\n  color: white;\n  border: none;\n  border-radius: 3px;\n  cursor: pointer;\n}\n.pagination button:disabled {\n  background-color: #ccc;\n  cursor: not-allowed;\n}\n.pagination button:hover:not(:disabled) {\n  background-color: #5a6268;\n}\n.error {\n  color: red;\n  margin-top: 10px;\n}\n.stats-section {\n    margin-bottom: 20px; /* Add some space below stats */\n}\n.stats-overview p {\n    margin: 5px 0;\n    font-size: 1.1em;\n}\n.stats-overview h3 {\n    margin-top: 15px;\n    margin-bottom: 5px;\n}\n.stats-overview ul {\n    padding-left: 20px;\n    list-style-type: none;\n}\n.stats-overview ul ul {\n    padding-left: 15px;\n    list-style-type: disc;\n    font-size: 0.9em;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}